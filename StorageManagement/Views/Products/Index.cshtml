@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@model IEnumerable<DataModels.Product>

@{
    ViewData["Title"] = "Products";
}

<h1>Products</h1>

@if (SignInManager.IsSignedIn(User))
{
    <p>
        <a asp-action="Create">Add new product</a>
    </p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                Quantity
            </th>
            <th>
                Standart
            </th>
            <th>
                Expiry date
            </th>
            <th>
                Product type
            </th>
            <th>
                Maker
            </th>
            <th>
                Arranged by staff
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Standart)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ExpiryDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductType.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Maker.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Staff.Name)
                </td>
                <td>
                    @if (SignInManager.IsSignedIn(User))
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
